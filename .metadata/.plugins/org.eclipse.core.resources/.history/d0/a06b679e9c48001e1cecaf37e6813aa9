package j04_array;

import java.util.Arrays;
import java.util.Random;

// ** Lotto 번호 생성기 만들기 2
// => 찾기(Search) & 정렬(Sort)

public class Ex05_Lotto2_Sort {

	public static void main(String[] args) {
		// 1) 배열정의
		int[] lotto = new int[6];
				
		// 2) Random 으로 숫자추출 & 배열에 담기
		Random rn = new Random();
		for (int i = 0; i < lotto.length; i++) {
					
			lotto[i] = rn.nextInt(45) + 1;
			// ** 중복확인 절차
			for (int j = 0; j <= i - 1; j++) {
				if (lotto[i] == lotto[j]) {
					--i;
					break;
				} //if
			} //j
		} //i
				
		// 3) 출력 (정렬전)
		System.out.println("** Lotto (정렬전) => " + Arrays.toString(lotto));

		// 4) 오름차순 정렬  // 치환
	    // => 순차정렬 (Sequence Sort)
	    // => 정렬 알고리즘에서 가장 간단하고 기본이 되는 알고리즘으로
	    //    배열의 처음과 끝을 탐색하면서 차순대로 정렬하는 가장 기초적인 정렬 알고리즘
	    // ** 정렬 알고리즘 : 삽입(insert)정렬, 합병(Merge)정렬, 퀵(Quick)정렬...
	    // => https://blog.naver.com/tepet/221690306235 
		for (int i = 0; i < lotto.length; i++) {
			for (int j = i + 1; j < lotto.length; j++) {
				if (lotto[i] > lotto[j]) {
					// ** 내림차순 (lotto[i] < lotto[j])
					int temp = lotto[i];
					lotto[i] = lotto[j];
					lotto[j] = temp;
				}
			} //j
		} //i
		System.out.println("** Lotto (정렬후) => " + Arrays.toString(lotto));
		
		// ** 배열 Wrapper class: Arrays
		// => Arrays 의 주요 메서드 : equals(null, null), sort(null)
		
		// 5) myNumber 생성후 비교하기
		// => 배열정의, Random 추출후, 중복확인후 배열에 담기,
		// => 정렬, equals 비교
		int[] myNumber = new int[6];
		for (int i = 0; i < myNumber.length; i++) {
			myNumber[i] = rn.nextInt(45) + 1;
			// ** 중복확인 절차
			for (int j = 0; j <= i - 1; j++) {
				if (myNumber[i] == myNumber[j]) {
					--i;
					break;
				}
			}
		}
		
		
		
	} //main

} //class
