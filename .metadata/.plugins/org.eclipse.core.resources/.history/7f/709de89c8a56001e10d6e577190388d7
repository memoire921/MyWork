package j14_Collection;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Set;

// ** HashMap 의 순차처리 ( Iterator , Entry ) 
// => HashMap 의 주요 메서드 ( Set Type 으로 return ) 활용
//   - entrySet() : key+value 를 Entry Type 으로 묶어 Set 으로
//   - keySet() : key 값들만 Set 으로
//   - values() : value 들만 Set 으로
// 1) 키와 값 같이 읽어 순차처리
// 2) 키와 값을 따로 읽어 순차처리

public class Ex09_MapIterator {

	public static void main(String[] args) {
		// 1. HashMap 정의
		// => <이름, 점수>
		HashMap<String, Integer> hm = new HashMap<>();
		hm.put("강백호", 90);
		hm.put("서태웅", 90);
		hm.put("정대만", 50);
		hm.put("채치수", 80);
		hm.put("송태섭", 70);
		System.out.println("** hm => " + hm);
		
		// 2. 순차처리
		// 2.1) entrySet() : key + value 를 Entry Type 으로 묶어 Set 으로
		// => HashMap 의 entrySet() -> Set -> Iterator
		//    키와 값을 같이 읽어 하나의 데이터(Entry Type)로 Set에 저장
		
		// *** ?
		// <?> => 모든 자료형 을 의미 , 내부적으로는 Object
		// <? super 객체형 > => 명시된 객체형의 상위 객체
		// <? extends 객체형 > => 명시된 객체형과 객체형을 상속한 하위 객체
		Set<?> set = hm.entrySet();
		System.out.println("** set => " + set);
		
		// ** Set -> Iterator
		Iterator<?> iSet = set.iterator();
		while(iSet.hasNext()) {
			System.out.println("** while: " + iSet.next());
			// => key, value 구분 없음 ( Set 의 Data 를 읽어 오는것에 불과함 )
			// => key, value 구분하려면 
			// => Entry 객체 활용: Entry 객체를 이용해서 key, value 구분가능
			
			
			
		}
		
		
		
		// 2.2) keySet() : key 값들만 Set 으로
		
		
		
		
		// 2.3) values() : value 들만 Set 으로
		

	} //main

} //class
