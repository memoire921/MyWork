<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapperInterface.MemberMapper">

<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
** interface 를 통해 ~Mapper 접근
=> interface ~Mapper.java 의 패키지명 & 화일명과  
   ~Mapper.xml 의 패키지명 & 화일명 & namespace 값은 같아야됨. 
   
=> namespace: 자바클래스에서 mapper를 찾는 경로
			  다른 mapper와 중복되지 않도록 네임스페이스 기재   

*** mapper 기본문법 
1) #{id} : parameter 로 전달된 vo 의 id 라는 컬럼의 value 가 전달됨  
		   -> getId() 로 처리함, Map의 경우 키값이 id 인 값을 찾음.
		    
2) ${id} : 필드를 표현 (매개변수로 전달된 객체의 id 컬럼의 값을 table의 컬럼으로 인식하고 적용함)    
		   
3) CDATA : XML에서는  <,>등 비교연산자의 경우 XML규칙상 에러 나기 때문에,
		   이 기호를 연산자로 인식하도록 하기 위해서는 SQL문을 CDATA로 묶어 주어야 한다.
		   
		   <![CDATA[ SELECT * FROM table WHERE jno < 5 ]]>
		   
4) 조건문, 반복문, sql, include, selectKey 등 		   
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- ** JoInfo_List -->
	<select id="joInfoList" resultType="domain.MemberDTO">
		Select m.id, name, age, m.jno, j.id, project, slogan
		From member m Right Outer Join jo j
		On m.jno=j.jno
	</select>
	
	<!-- ** Jo_List -->
	<select id="joList" resultType="domain.MemberDTO">
		select * from member where jno=#{jno}
	</select>
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- 1. selectList -->
	<select id="selectList" resultType="domain.MemberDTO">
		select * from member
	</select>

	<!-- 2. selectOne: Detail -->
	<select id="selectOne" resultType="domain.MemberDTO">
		select * from member where id=#{id}
	</select>
	
	<!-- 3. insert: Join 
		=> image 추가 후 사용:
			values(#{id},.......,#{rid},#{uploadfile})
	-->
	<insert id="insert">
		insert into member 
		values(#{id},#{password},#{name},#{age},#{jno},#{info}
				,#{point},#{birthday},#{rid},#{uploadfile})
	</insert>
	
	<!-- 4. update 
		=> password 수정과 나머지 컬럼 수정을 분리함 
		=> image 추가 후 사용:  , uploadfile=#{uploadfile}  	-->
	<update id="update">
		update member set 
		<if test="password!=null">
			password=#{password}
		</if>
		<if test="password==null">
			name=#{name}, age=#{age}, jno=#{jno}, info=#{info}, point=#{point}, 
			birthday=#{birthday}, rid=#{rid}, uploadfile=#{uploadfile} 
		</if>
		where id=#{id}
	</update>
	
	<!-- 5. delete -->
	<delete id="delete">
		delete from member where id=#{id}
	</delete>

</mapper>  